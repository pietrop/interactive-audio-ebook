{"version":3,"file":"static/webpack/static/development/pages/books/[bookId].js.1f45927aff6ac6b0c86e.hot-update.js","sources":["webpack:///./pages/books/[bookId].js"],"sourcesContent":["import {useState} from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport dynamic from 'next/dynamic';\nimport data from '../../prep-utils/json/59.json';\n// const DynamicComponent = dynamic(() => import('../../prep-utils/json/59.json'))\nconst getData = async (id)=>{\n return import( `../../prep-utils/json/${id}.json`).then(({default: myData}) => myData);\n}\n\n\n\nconst Book =  () => {\n  const router = useRouter();\n  const { bookId } = router.query;\n  const [bookData, setBookData] = useState();\n\n  // const [foo, setFoo] = useState([]);\n\n\n   getData(bookId).then((res)=>{\n    console.log('data 59', Array.from(res));\n    // setBookData(res);\n    setBookData(res)\n   }).catch((err)=>{\n     console.error('couldn\\'t find book id', bookId)\n   })\n\n\n\n  return (<>\n  { bookData && <>\n    <h2><b>Book:</b>{bookData.title}</h2>\n    <a href={bookData.link} target=\"_blank\" rel=\"noopener noreferrer\">LibriVox</a> | <a href={`https://www.gutenberg.org/files/${bookData.gutembergId}/${bookData.gutembergId}-h/${bookData.gutembergId}-h.htm`} target=\"_blank\" rel=\"noopener noreferrer\">Gutenberg</a>\n\n\n    <img href={`https://www.gutenberg.org/files/${bookData.gutembergId}/${bookData.gutembergId}-h/images/bookcover.jpg`}/>\n\n    <p>{bookData.description}</p>\n  </> }\n\n  <ul>\n  { bookData && bookData.chapters.map((chapter) => (\n    <li>\n      <Link href=\"/books/[bookId]/[chapterId]\" as={`/books/${bookId}/${chapter.chapter}`}>\n       <a>{chapter.title} - {chapter.duration} </a> \n      </Link>\n    </li>\n  ))\n}\n    </ul>\n\n\n\n  </>)\n}\n\nexport default Book"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAaA;AACA;AACA;;;;A","sourceRoot":""}