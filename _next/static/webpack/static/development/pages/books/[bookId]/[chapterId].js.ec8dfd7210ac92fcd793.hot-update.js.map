{"version":3,"file":"static/webpack/static/development/pages/books/[bookId]/[chapterId].js.ec8dfd7210ac92fcd793.hot-update.js","sources":["webpack:///./pages/books/[bookId]/[chapterId].js"],"sourcesContent":["import {useState, useRef} from 'react';\nimport { useRouter } from 'next/router';\nimport calculateWordDuration from '../../../utils/calculate-word-duration';\nconst getData = async (id)=>{\n    return import( `../../../prep-utils/json/${id}.json`).then(({default: myData}) => myData);\n   }\n\nconst Chapter = () => {\n  const router = useRouter()\n  const { chapterId, bookId } = router.query\n  const [chapterData, setChapterData] = useState();\n  const [bookTitle, setBookTitle] = useState(\"\");\n  const audioRef = useRef();\n  getData(bookId).then((res)=>{\n    console.log('data 59', res);\n    // setBookData(res);\n    console.log('chapterId',chapterId)\n    setBookTitle(res.title);\n    // adjusting chapter id with array index\n    const currentChapter = res.chapters[parseInt(chapterId)-1];\n    setChapterData(currentChapter)\n   }).catch((err)=>{\n     console.error(\"couldn 't find book id\", bookId)\n   })\n\n   const handleTextClick = (e)=>{\n       const index = parseInt(e.target.id);\n    //    console.log()\n       const wordList = chapterData.text.split(' ');\n       const removeCount = wordList.length - index;\n       wordList.splice( index, removeCount )\n       const estimatedTimeOffset = wordList.reduce((total, word)=>{\n            const wordDuration = calculateWordDuration(word);\n            total += parseFloat(wordDuration);\n            return total;\n       }, 0)\n\n       console.log('estimatedTimeOffset',estimatedTimeOffset)\n       audioRef.current.currentTime  = estimatedTimeOffset;\n       audioRef.current.play()\n   }\n\n\nreturn (<>\n  <style jsx>{`\n  \n  .words {\n      cursor: pointer;\n      margin-bottom: 17px;\n      font-size: 17px;\n      line-height: 27px;\n      word-wrap: break-word;\n  }\n  \n  .words:hover:before {\n      content: \"â–¶\";\n      color: blue;\n      opacity: 0.6;\n      position: absolute;\n      margin-top: -12px;\n  }\n\n  audio{\n    position: fixed;\n    bottom: 0;\n    left: 0px;\n    width: 100%;\n}\n\n\n  .duration{\n    font-size: medium;\n}\n  `}</style>\n  <style jsx global>{`\n \n  \n  `}</style>\n    <h2>{chapterData && chapterData.title} - {bookTitle&&bookTitle} <span className=\"duration\">{chapterData && chapterData.duration} </span></h2>\n  \n  <br/>\n  <br/>\n  {chapterData && ( <audio  ref={audioRef} src={chapterData.url} controls type={chapterData.type} /> )}\n  <article onClick={handleTextClick}>\n    {chapterData && chapterData.text.split(' ').map((word, index)=>{ return <span className=\"words\" id={index}>{word} </span>})}\n  </article>\n  <br/>\n  <br/>\n  <br/>\n  <br/>\n\n  \n  </>)\n}\n\nexport default Chapter\n\nChapter.getInitialProps = async ctx => {\n    // const res = await fetch('https://api.github.com/repos/zeit/next.js')\n    // const json = await res.json()\n    return { }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmsourceRoot":""}